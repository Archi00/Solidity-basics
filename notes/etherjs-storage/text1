Solidity is a synchronous language, so we will work with async js

Solc is the compiler we can use for solidity, we can use npm to install it:
	npm install solc || yarn add solc

yarn solcjs --bin --abi --include-path node_modules/ --base-path . -o . SimpleStorage.sol

Some nodes expose an RPC URL that let's us connect or interact with the blockchain

web3.js | ethers.js
ethers.js powers hardhat

	yarn add ethers

With the abi and the bin files we can create a contract factory
	new ethers.ContractFactory(abi, binary, wallet) 

new ehters.ContractFactory(abi, binary, wallet) returns a promise we need to "await"
contractFactory accepts overrides for gasPrice, etc...

  // const nonce = await wallet.getTransactionCount();
  // const tx = {
  //   nonce: nonce,
  //   gasPrice: 20000000000,
  //   gasLimit: 6721975,
  //   to: null,
  //   value: 0,
  //   data: "0x...",
  //   chainId: 1337,
  // };
  // const sentTxResponse = await wallet.sendTransaction(tx);
  // await sentTxResponse.wait(1);

As js has problems with numbers and big numbers we should pass strings while using ethers
