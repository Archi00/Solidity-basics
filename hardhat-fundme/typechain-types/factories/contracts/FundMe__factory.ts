/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_addressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620011f9380380620011f9833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61107a6200017f600039600081816103d8015281816105f1015261082f015261107a6000f3fe60806040526004361061007f5760003560e01c806354861af71161004e57806354861af714610135578063b60d428814610172578063be2693f01461017c578063e3978240146101865761008e565b80630d8e6e2c146100985780630ec3b027146100c35780631bf6132d146100ee5780633ccfd60b1461012b5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102f1565b6040516100ba91906109ed565b60405180910390f35b3480156100cf57600080fd5b506100d8610398565b6040516100e59190610a87565b60405180910390f35b3480156100fa57600080fd5b5061011560048036038101906101109190610ae5565b6103be565b60405161012291906109ed565b60405180910390f35b6101336103d6565b005b34801561014157600080fd5b5061015c60048036038101906101579190610b3e565b6105b0565b6040516101699190610b7a565b60405180910390f35b61017a6101b1565b005b6101846105ef565b005b34801561019257600080fd5b5061019b61082d565b6040516101a89190610b7a565b60405180910390f35b60006802b5e3af16b18800009050806101f5600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085190919063ffffffff16565b1015610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022d90610bf2565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102849190610c41565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561035b57600080fd5b505afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610cac565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104a1573d6000803e3d6000fd5b5060005b60018054905081101561054d576000600182815481106104c8576104c7610cd9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061054590610d08565b9150506104a5565b50600067ffffffffffffffff81111561056957610568610d51565b5b6040519080825280602002602001820160405280156105975781602001602082028036833780820191505090505b50600190805190602001906105ad92919061092d565b50565b600181815481106105c057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610674576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156106ba573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561073f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f5575b5050505050905060005b81518110156107c957600082828151811061076757610766610cd9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107c190610d08565b915050610749565b50600067ffffffffffffffff8111156107e5576107e4610d51565b5b6040519080825280602002602001820160405280156108135781602001602082028036833780820191505090505b506001908051906020019061082992919061092d565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061085d8361088d565b90506000670de0b6b3a764000085836108769190610d80565b6108809190610e09565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108d657600080fd5b505afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190610eb2565b5050509150506402540be400816109259190610f2d565b915050919050565b8280548282559060005260206000209081019282156109a6579160200282015b828111156109a55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061094d565b5b5090506109b391906109b7565b5090565b5b808211156109d05760008160009055506001016109b8565b5090565b6000819050919050565b6109e7816109d4565b82525050565b6000602082019050610a0260008301846109de565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a4d610a48610a4384610a08565b610a28565b610a08565b9050919050565b6000610a5f82610a32565b9050919050565b6000610a7182610a54565b9050919050565b610a8181610a66565b82525050565b6000602082019050610a9c6000830184610a78565b92915050565b600080fd5b6000610ab282610a08565b9050919050565b610ac281610aa7565b8114610acd57600080fd5b50565b600081359050610adf81610ab9565b92915050565b600060208284031215610afb57610afa610aa2565b5b6000610b0984828501610ad0565b91505092915050565b610b1b816109d4565b8114610b2657600080fd5b50565b600081359050610b3881610b12565b92915050565b600060208284031215610b5457610b53610aa2565b5b6000610b6284828501610b29565b91505092915050565b610b7481610aa7565b82525050565b6000602082019050610b8f6000830184610b6b565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610bdc601b83610b95565b9150610be782610ba6565b602082019050919050565b60006020820190508181036000830152610c0b81610bcf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4c826109d4565b9150610c57836109d4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c8c57610c8b610c12565b5b828201905092915050565b600081519050610ca681610b12565b92915050565b600060208284031215610cc257610cc1610aa2565b5b6000610cd084828501610c97565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d13826109d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4657610d45610c12565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610d8b826109d4565b9150610d96836109d4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dcf57610dce610c12565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e14826109d4565b9150610e1f836109d4565b925082610e2f57610e2e610dda565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e5981610e3a565b8114610e6457600080fd5b50565b600081519050610e7681610e50565b92915050565b6000819050919050565b610e8f81610e7c565b8114610e9a57600080fd5b50565b600081519050610eac81610e86565b92915050565b600080600080600060a08688031215610ece57610ecd610aa2565b5b6000610edc88828901610e67565b9550506020610eed88828901610e9d565b9450506040610efe88828901610c97565b9350506060610f0f88828901610c97565b9250506080610f2088828901610e67565b9150509295509295909350565b6000610f3882610e7c565b9150610f4383610e7c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f8257610f81610c12565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fbf57610fbe610c12565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ffc57610ffb610c12565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561103957611038610c12565b5b82820290509291505056fea2646970667358221220cf047995ab4f27ff1d8f5fdcc9765f105719941a48a901a4c1896d21bd1a189e64736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeed, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeed, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
