/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_addressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200127e3803806200127e833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110f86200018660003960008181610280015281816105d9015281816107cf015261086701526110f86000f3fe60806040526004361061007b5760003560e01c806354861af71161004e57806354861af71461011d578063b60d42881461015a578063be2693f014610164578063dba6335f1461016e5761007b565b80630d8e6e2c146100805780630ec3b027146100ab5780631bf6132d146100d65780633ccfd60b14610113575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610a25565b60405180910390f35b3480156100b757600080fd5b506100c0610240565b6040516100cd9190610abf565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610b1d565b610266565b60405161010a9190610a25565b60405180910390f35b61011b61027e565b005b34801561012957600080fd5b50610144600480360381019061013f9190610b76565b610458565b6040516101519190610bb2565b60405180910390f35b610162610497565b005b61016c6105d7565b005b34801561017a57600080fd5b50610183610865565b6040516101909190610bb2565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561020357600080fd5b505afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610be2565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610303576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610349573d6000803e3d6000fd5b5060005b6001805490508110156103f5576000600182815481106103705761036f610c0f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ed90610c6d565b91505061034d565b50600067ffffffffffffffff81111561041157610410610cb6565b5b60405190808252806020026020018201604052801561043f5781602001602082028036833780820191505090505b5060019080519060200190610455929190610965565b50565b6001818154811061046857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006802b5e3af16b18800009050806104db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088990919063ffffffff16565b101561051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390610d42565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461056a9190610d62565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610696575b5050505050905060005b815181101561076a57600082828151811061070857610707610c0f565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076290610c6d565b9150506106ea565b50600067ffffffffffffffff81111561078657610785610cb6565b5b6040519080825280602002602001820160405280156107b45781602001602082028036833780820191505090505b50600190805190602001906107ca929190610965565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081190610de9565b60006040518083038185875af1925050503d806000811461084e576040519150601f19603f3d011682016040523d82523d6000602084013e610853565b606091505b505090508061086157600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610895836108c5565b90506000670de0b6b3a764000085836108ae9190610dfe565b6108b89190610e87565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090e57600080fd5b505afa158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190610f30565b5050509150506402540be4008161095d9190610fab565b915050919050565b8280548282559060005260206000209081019282156109de579160200282015b828111156109dd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610985565b5b5090506109eb91906109ef565b5090565b5b80821115610a085760008160009055506001016109f0565b5090565b6000819050919050565b610a1f81610a0c565b82525050565b6000602082019050610a3a6000830184610a16565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a85610a80610a7b84610a40565b610a60565b610a40565b9050919050565b6000610a9782610a6a565b9050919050565b6000610aa982610a8c565b9050919050565b610ab981610a9e565b82525050565b6000602082019050610ad46000830184610ab0565b92915050565b600080fd5b6000610aea82610a40565b9050919050565b610afa81610adf565b8114610b0557600080fd5b50565b600081359050610b1781610af1565b92915050565b600060208284031215610b3357610b32610ada565b5b6000610b4184828501610b08565b91505092915050565b610b5381610a0c565b8114610b5e57600080fd5b50565b600081359050610b7081610b4a565b92915050565b600060208284031215610b8c57610b8b610ada565b5b6000610b9a84828501610b61565b91505092915050565b610bac81610adf565b82525050565b6000602082019050610bc76000830184610ba3565b92915050565b600081519050610bdc81610b4a565b92915050565b600060208284031215610bf857610bf7610ada565b5b6000610c0684828501610bcd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7882610a0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cab57610caa610c3e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d2c601b83610ce5565b9150610d3782610cf6565b602082019050919050565b60006020820190508181036000830152610d5b81610d1f565b9050919050565b6000610d6d82610a0c565b9150610d7883610a0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dad57610dac610c3e565b5b828201905092915050565b600081905092915050565b50565b6000610dd3600083610db8565b9150610dde82610dc3565b600082019050919050565b6000610df482610dc6565b9150819050919050565b6000610e0982610a0c565b9150610e1483610a0c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4d57610e4c610c3e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9282610a0c565b9150610e9d83610a0c565b925082610ead57610eac610e58565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ed781610eb8565b8114610ee257600080fd5b50565b600081519050610ef481610ece565b92915050565b6000819050919050565b610f0d81610efa565b8114610f1857600080fd5b50565b600081519050610f2a81610f04565b92915050565b600080600080600060a08688031215610f4c57610f4b610ada565b5b6000610f5a88828901610ee5565b9550506020610f6b88828901610f1b565b9450506040610f7c88828901610bcd565b9350506060610f8d88828901610bcd565b9250506080610f9e88828901610ee5565b9150509295509295909350565b6000610fb682610efa565b9150610fc183610efa565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100057610fff610c3e565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103d5761103c610c3e565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107a57611079610c3e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110b7576110b6610c3e565b5b82820290509291505056fea2646970667358221220a066e28bcf44b25fefc373f8850db6a06cf6c6e6d0c2b837564c8994eaeb4c9f64736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeed, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeed, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
