/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MIN_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_funder",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getFunder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200135b3803806200135b833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111d5620001866000396000818161041f015281816105fb0152818161064b015261088801526111d56000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063be2693f0146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630d8e6e2c146100e0578063213dbea21461010b5780633ccfd60b1461013657610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b4c565b610321565b6040516100d79190610b92565b60405180910390f35b3480156100ec57600080fd5b506100f5610369565b6040516101029190610b92565b60405180910390f35b34801561011757600080fd5b50610120610410565b60405161012d9190610b92565b60405180910390f35b61013e61041d565b005b34801561014c57600080fd5b506101556105f7565b6040516101629190610bbc565b60405180910390f35b34801561017757600080fd5b5061018061061f565b60405161018d9190610c36565b60405180910390f35b61019e6101e7565b005b6101a8610649565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610c7d565b61091e565b6040516101de9190610bbc565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096690919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d07565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610d56565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610dc1565b905090565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104e8573d6000803e3d6000fd5b5060005b6001805490508110156105945760006001828154811061050f5761050e610dee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061058c90610e1d565b9150506104ec565b50600067ffffffffffffffff8111156105b0576105af610e66565b5b6040519080825280602002602001820160405280156105de5781602001602082028036833780820191505090505b50600190805190602001906105f4929190610a42565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ce576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610714573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561079957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161074f575b5050505050905060005b81518110156108235760008282815181106107c1576107c0610dee565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061081b90610e1d565b9150506107a3565b50600067ffffffffffffffff81111561083f5761083e610e66565b5b60405190808252806020026020018201604052801561086d5781602001602082028036833780820191505090505b5060019080519060200190610883929190610a42565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108ca90610ec6565b60006040518083038185875af1925050503d8060008114610907576040519150601f19603f3d011682016040523d82523d6000602084013e61090c565b606091505b505090508061091a57600080fd5b5050565b60006001828154811061093457610933610dee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610972836109a2565b90506000670de0b6b3a7640000858361098b9190610edb565b6109959190610f64565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109eb57600080fd5b505afa1580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a23919061100d565b5050509150506402540be40081610a3a9190611088565b915050919050565b828054828255906000526020600020908101928215610abb579160200282015b82811115610aba5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a62565b5b509050610ac89190610acc565b5090565b5b80821115610ae5576000816000905550600101610acd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1982610aee565b9050919050565b610b2981610b0e565b8114610b3457600080fd5b50565b600081359050610b4681610b20565b92915050565b600060208284031215610b6257610b61610ae9565b5b6000610b7084828501610b37565b91505092915050565b6000819050919050565b610b8c81610b79565b82525050565b6000602082019050610ba76000830184610b83565b92915050565b610bb681610b0e565b82525050565b6000602082019050610bd16000830184610bad565b92915050565b6000819050919050565b6000610bfc610bf7610bf284610aee565b610bd7565b610aee565b9050919050565b6000610c0e82610be1565b9050919050565b6000610c2082610c03565b9050919050565b610c3081610c15565b82525050565b6000602082019050610c4b6000830184610c27565b92915050565b610c5a81610b79565b8114610c6557600080fd5b50565b600081359050610c7781610c51565b92915050565b600060208284031215610c9357610c92610ae9565b5b6000610ca184828501610c68565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cf1601b83610caa565b9150610cfc82610cbb565b602082019050919050565b60006020820190508181036000830152610d2081610ce4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6182610b79565b9150610d6c83610b79565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da157610da0610d27565b5b828201905092915050565b600081519050610dbb81610c51565b92915050565b600060208284031215610dd757610dd6610ae9565b5b6000610de584828501610dac565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e2882610b79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5b57610e5a610d27565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eb0600083610e95565b9150610ebb82610ea0565b600082019050919050565b6000610ed182610ea3565b9150819050919050565b6000610ee682610b79565b9150610ef183610b79565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f2a57610f29610d27565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f6f82610b79565b9150610f7a83610b79565b925082610f8a57610f89610f35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fb481610f95565b8114610fbf57600080fd5b50565b600081519050610fd181610fab565b92915050565b6000819050919050565b610fea81610fd7565b8114610ff557600080fd5b50565b60008151905061100781610fe1565b92915050565b600080600080600060a0868803121561102957611028610ae9565b5b600061103788828901610fc2565b955050602061104888828901610ff8565b945050604061105988828901610dac565b935050606061106a88828901610dac565b925050608061107b88828901610fc2565b9150509295509295909350565b600061109382610fd7565b915061109e83610fd7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110dd576110dc610d27565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561111a57611119610d27565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561115757611156610d27565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561119457611193610d27565b5b82820290509291505056fea26469706673582212205f2827d6ac1662b019491e00152085ecb1981d039025e0fff5f4c9c6fe14256b64736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeed, overrides || {}) as Promise<FundMe>;
  }
  override getDeployTransaction(
    priceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeed, overrides || {});
  }
  override attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  override connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
